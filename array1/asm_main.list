     1                                  
     2                                  
     3                                  ;
     4                                  ; file: array1.asm
     5                                  ; This program demonstrates arrays in assembly
     6                                  ;
     7                                  ; To create executable:
     8                                  ; nasm -f coff array1.asm
     9                                  ; gcc -o array1 array1.o array1c.c
    10                                  ;
    11                                  
    12                                  %define ARRAY_SIZE 100
    13                                  %define NEW_LINE 10
    14                                  
    15                                  segment .data
    16 00000000 466972737420313020-     FirstMsg        db   "First 10 elements of array", 0
    17 00000009 656C656D656E747320-
    18 00000012 6F6620617272617900 
    19 0000001B 456E74657220696E64-     Prompt          db   "Enter index of element to display: ", 0
    20 00000024 6578206F6620656C65-
    21 0000002D 6D656E7420746F2064-
    22 00000036 6973706C61793A2000 
    23 0000003F 456C656D656E742025-     SecondMsg       db   "Element %d is %d", NEW_LINE, 0
    24 00000048 642069732025640A00 
    25 00000051 456C656D656E747320-     ThirdMsg        db   "Elements 20 through 29 of array", 0
    26 0000005A 3230207468726F7567-
    27 00000063 68203239206F662061-
    28 0000006C 7272617900         
    29 00000071 256400                  InputFormat     db   "%d", 0
    30                                  
    31                                  segment .bss
    32 00000000 <res 00000190>          array           resd ARRAY_SIZE
    33                                  
    34                                   
    35                                  
    36                                  segment .text
    37                                          extern  puts, printf, scanf, dump_line
    38                                          global  asm_main
    39                                  asm_main:
    40 00000000 C8040000                        enter   4,0             ; local dword variable at EBP - 4
    41 00000004 53                              push    ebx
    42 00000005 56                              push    esi
    43                                  
    44                                  ; initialize array to 100, 99, 98, 97, ...
    45                                  
    46 00000006 B964000000                      mov     ecx, ARRAY_SIZE
    47 0000000B BB[00000000]                    mov     ebx, array
    48                                  init_loop:
    49 00000010 890B                            mov     [ebx], ecx
    50 00000012 83C304                          add     ebx, 4
    51 00000015 E2F9                            loop    init_loop
    52                                  
    53 00000017 68[00000000]                    push    dword FirstMsg       ; print out elements 20-29
    54 0000001C E8(00000000)                    call    puts           ; print out FirstMsg
    55 00000021 59                              pop     ecx
    56                                  
    57 00000022 6A0A                            push    dword 10
    58 00000024 68[00000000]                    push    dword array
    59 00000029 E866000000                      call    print_array           ; print first 10 elements of array
    60 0000002E 83C408                          add     esp, 8
    61                                  
    62                                  ; prompt user for element index
    63                                  Prompt_loop:
    64 00000031 68[1B000000]                    push    dword Prompt
    65 00000036 E8(00000000)                    call    printf
    66 0000003B 59                              pop     ecx
    67                                  
    68 0000003C 8D45FC                          lea     eax, [ebp-4]      ; eax = address of local dword
    69 0000003F 50                              push    eax
    70 00000040 68[71000000]                    push    dword InputFormat
    71 00000045 E8(00000000)                    call    scanf
    72 0000004A 83C408                          add     esp, 8
    73 0000004D 83F801                          cmp     eax, 1               ; eax = return value of scanf
    74 00000050 7407                            je      InputOK
    75                                  
    76 00000052 E8(00000000)                    call    dump_line            ; dump rest of line and start over
    77 00000057 EBD8                            jmp     Prompt_loop          ; if input invalid
    78                                  
    79                                  InputOK:
    80 00000059 8B75FC                          mov     esi, [ebp-4]
    81 0000005C FF34B5[00000000]                push    dword [array + 4*esi]
    82 00000063 56                              push    esi
    83 00000064 68[3F000000]                    push    dword SecondMsg      ; print out value of element
    84 00000069 E8(00000000)                    call    printf
    85 0000006E 83C40C                          add     esp, 12
    86 00000071 68[51000000]                    push    dword ThirdMsg       ; print out elements 20-29
    87 00000076 E8(00000000)                    call    puts
    88 0000007B 59                              pop     ecx
    89                                  
    90 0000007C 6A0A                            push    dword 10
    91 0000007E 68[50000000]                    push    dword array + 20*4     ; address of array[20]
    92 00000083 E80C000000                      call    print_array
    93 00000088 83C408                          add     esp, 8
    94                                  
    95 0000008B 5E                              pop     esi
    96 0000008C 5B                              pop     ebx
    97 0000008D B800000000                      mov     eax, 0            ; return back to C
    98 00000092 C9                              leave                     
    99 00000093 C3                              ret
   100                                  
   101                                  ;
   102                                  ; routine print_array
   103                                  ; C-callable routine that prints out elements of a double word array as
   104                                  ; signed integers.
   105                                  ; C prototype:
   106                                  ; void print_array( const int * a, int n);
   107                                  ; Parameters:
   108                                  ;   a - pointer to array to print out (at ebp+8 on stack)
   109                                  ;   n - number of integers to print out (at ebp+12 on stack)
   110                                  
   111                                  segment .data
   112 00000074 252D3564202535640A-     OutputFormat    db   "%-5d %5d", NEW_LINE, 0
   113 0000007D 00                 
   114                                  
   115                                  segment .text
   116                                          global  print_array
   117                                  print_array:
   118 00000094 C8000000                        enter   0,0
   119 00000098 56                              push    esi
   120 00000099 53                              push    ebx
   121                                  
   122 0000009A 31F6                            xor     esi, esi                  ; esi = 0
   123 0000009C 8B4D0C                          mov     ecx, [ebp+12]             ; ecx = n
   124 0000009F 8B5D08                          mov     ebx, [ebp+8]              ; ebx = address of array
   125                                  print_loop:
   126 000000A2 51                              push    ecx                       ; printf might change ecx!
   127                                  
   128 000000A3 FF34B3                          push    dword [ebx + 4*esi]       ; push array[esi]
   129 000000A6 56                              push    esi
   130 000000A7 68[74000000]                    push    dword OutputFormat
   131 000000AC E8(00000000)                    call    printf
   132 000000B1 83C40C                          add     esp, 12                   ; remove parameters (leave ecx!)
   133                                  
   134 000000B4 46                              inc     esi
   135 000000B5 59                              pop     ecx
   136 000000B6 E2EA                            loop    print_loop
   137                                  
   138 000000B8 5B                              pop     ebx
   139 000000B9 5E                              pop     esi
   140 000000BA C9                              leave
   141 000000BB C3                              ret
   142                                  
   143                                  
   144                                  
   145                                  
